alpha2 <- list(a1 = 2^seq(-10, 3, length.out = 10),a2 = 2^seq(-10, 3, length.out = 10))
result_soroush <- Mhpca(hd_obj = hd_obj5,method = "power",ncomp = 3,smooth_tuning = alpha2,centerfns = T,alpha_orth = F,smoothing_type = "basispen")
result_soroush_eigen <- Mhpca(hd_obj = hd_obj3,method = "eigen",ncomp = 3,smooth_tuning = alpha2,centerfns = T,smoothing_type = "basispen")
result_soroush_orth <- Mhpca(hd_obj = hd_obj3,method = "power",ncomp = 3,smooth_tuning = alpha2,centerfns = T,alpha_orth = T,smoothing_type = "basispen")
result_soroush$pc_mfd |> plot()
result_soroush |> plot()
MHPCA::plot
library(spls)
data("yeast")
# ChIP-chip data
x <- yeast$x
# gene expression functional 542 genes and and each column is mrna level measure at each 7 minutes
y <- yeast$y
rm(yeast)
# Create B-spline basis and multivariate functional data (mfd) objects
v1 <- t(y)
scaling_factor_tfunction <- sqrt(mean(diag(var(v1))))
v1 <- 1/sqrt(mean(diag(var(v1))))*v1
nbasis_f <- 10
t0_f <- 0
t1_f <- 119
grid_point <- ncol(y)
t <- seq(t0_f, t1_f, length.out = grid_point)
bspline_basis <- fda::create.bspline.basis(c(t0_f,t1_f),nbasis_f)
mfd_basis <- basismfd$new(bspline_basis)
mfd_v1 <- mfd$new(t,v1,mfd_basis)
mfd_v2 <- mfd$new(t,v1,mfd_basis)
mvmfd_v12 <- Mvmfd(mfd_v1,mfd_v2)
hd_obj1 <- Hd(list(mfd_v1,mfd_v1))
#vector data
vector_data <- x
scaling_factor_vector <- sqrt(mean(diag(var(vector_data))))
vector_data <- 1/scaling_factor_vector*vector_data
nfd_obj1 <- nfd(vector_data)
nfd_obj2 <- nfd(vector_data)
mvnfd_obj <- Mvnfd(nfd_obj1,nfd_obj2)
hd_obj2 <- Hd(list(mfd_v1,mfd_v1,nfd_obj1))
hd_obj3 <- Hd(mfd_v1,nfd_obj1)
hd_obj4 <- Hd(nfd_obj1)
hd_obj5 <- Hd(mfd_v1,mfd_v1,nfd_obj1,nfd_obj1)
#model
alpha1 <- list(a1 = 2^seq(-10, 3, length.out = 10))
alpha2 <- list(a1 = 2^seq(-10, 3, length.out = 10),a2 = 2^seq(-10, 3, length.out = 10))
result_soroush <- Mhpca(hd_obj = hd_obj5,method = "power",ncomp = 3,smooth_tuning = alpha2,centerfns = T,alpha_orth = F,smoothing_type = "basispen")
result_soroush_eigen <- Mhpca(hd_obj = hd_obj3,method = "eigen",ncomp = 3,smooth_tuning = alpha2,centerfns = T,smoothing_type = "basispen")
result_soroush_orth <- Mhpca(hd_obj = hd_obj3,method = "power",ncomp = 3,smooth_tuning = alpha2,centerfns = T,alpha_orth = T,smoothing_type = "basispen")
library(spls)
data("yeast")
# ChIP-chip data
x <- yeast$x
# gene expression functional 542 genes and and each column is mrna level measure at each 7 minutes
y <- yeast$y
rm(yeast)
# Create B-spline basis and multivariate functional data (mfd) objects
v1 <- t(y)
scaling_factor_tfunction <- sqrt(mean(diag(var(v1))))
v1 <- 1/sqrt(mean(diag(var(v1))))*v1
nbasis_f <- 10
t0_f <- 0
t1_f <- 119
grid_point <- ncol(y)
t <- seq(t0_f, t1_f, length.out = grid_point)
bspline_basis <- fda::create.bspline.basis(c(t0_f,t1_f),nbasis_f)
mfd_basis <- basismfd$new(bspline_basis)
mfd_v1 <- mfd$new(t,v1,mfd_basis)
mfd_v2 <- mfd$new(t,v1,mfd_basis)
mvmfd_v12 <- Mvmfd(mfd_v1,mfd_v2)
hd_obj1 <- Hd(list(mfd_v1,mfd_v1))
#vector data
vector_data <- x
scaling_factor_vector <- sqrt(mean(diag(var(vector_data))))
vector_data <- 1/scaling_factor_vector*vector_data
nfd_obj1 <- nfd(vector_data)
nfd_obj2 <- nfd(vector_data)
mvnfd_obj <- Mvnfd(nfd_obj1,nfd_obj2)
hd_obj2 <- Hd(list(mfd_v1,mfd_v1,nfd_obj1))
hd_obj3 <- Hd(mfd_v1,nfd_obj1)
hd_obj4 <- Hd(nfd_obj1)
hd_obj5 <- Hd(mfd_v1,mfd_v1,nfd_obj1,nfd_obj1)
#model
alpha1 <- list(a1 = 2^seq(-10, 3, length.out = 10))
alpha2 <- list(a1 = 2^seq(-10, 3, length.out = 10),a2 = 2^seq(-10, 3, length.out = 10))
result_soroush <- Mhpca(hd_obj = hd_obj5,method = "power",ncomp = 3,smooth_tuning = alpha2,centerfns = T,alpha_orth = F,smoothing_type = "basispen")
result_soroush_eigen <- Mhpca(hd_obj = hd_obj3,method = "eigen",ncomp = 3,smooth_tuning = alpha2,centerfns = T,smoothing_type = "basispen")
result_soroush_orth <- Mhpca(hd_obj = hd_obj3,method = "power",ncomp = 3,smooth_tuning = alpha2,centerfns = T,alpha_orth = T,smoothing_type = "basispen")
plot(result_soroush)
plot(result_soroush_eigen)
result_soroush_eigen <- Mhpca(hd_obj = hd_obj5,method = "eigen",ncomp = 3,smooth_tuning = alpha2,centerfns = T,smoothing_type = "basispen")
result_soroush_orth <- Mhpca(hd_obj = hd_obj5,method = "power",ncomp = 3,smooth_tuning = alpha2,centerfns = T,alpha_orth = T,smoothing_type = "basispen")
plot(result_soroush_eigen)
plot(result_soroush_orth)
result_soroush <- Mhpca(hd_obj = hd_obj5,method = "power",ncomp = 3,smooth_tuning = alpha2,centerfns = T,alpha_orth = F,smoothing_type = "basispen")
1
k1 <- result_soroush$pc_nfd
k2 <- result_soroush$pc_mfd
class(k1)
class(k2)
k3 <- Mvnfd(k1)
k1 |> length()
k1[[1]] |> class()
k1[[2]] |> class()
k1[[2]]
k1[[1]]
k2
t(k1[[1]])
hd(k2[,1],t(k1[[1]]))
Hd(k2[,1],t(k1[[1]]))
Mvnfd(k1[[1]],k1[[2]])
k3 <- list(nfd_obj1,nfd_obj2)
Mvnfd(k3)
k1
k1[[1]]$nfeature
k1[[1]]$nfeatures
metho\
methods(class = "nfd")
devtools::load_all(".")
Mvnfd(k1)
nfd_list
Mvnfd(k1)
nfd_list[[1]]
nfd_list[[1]]$feature
nfd_list[[1]]$features
nfd_list[[1]]$Features
nfd_list[[1]]
nfd_list[[1]]$features
Mvnfd(k1)
nfd_list[[1]] |> colnames()
nfd_list[[1]]
nfd_list[[1]] |> ncol()
ncol(nfd_list[[1]])
seq_len(ncol(nfd_list[[1]]))
devtools::load_all(".")
Mvnfd(k1)
paste0("V"), seq_len(ncol(x))
Mvnfd(k1)
result_soroush <- Mhpca(hd_obj = hd_obj5,method = "power",ncomp = 3,smooth_tuning = alpha2,centerfns = T,alpha_orth = F,smoothing_type = "basispen")
result_soroush <- Mhpca(hd_obj = hd_obj3,method = "power",ncomp = 3,smooth_tuning = .25,centerfns = T,alpha_orth = F,smoothing_type = "basispen")
result_soroush <- Mhpca(hd_obj = hd_obj3,method = "power",ncomp = 3,smooth_tuning = .25,centerfns = T,alpha_orth = F,smoothing_type = "basispen")
result_soroush$mean_hd
result_soroush$pc_hd
result_soroush <- Mhpca(hd_obj = hd_obj5,method = "power",ncomp = 3,smooth_tuning = .25,centerfns = T,alpha_orth = F,smoothing_type = "basispen")
result_soroush$mean_hd
devtools::load_all(".")
result_soroush <- Mhpca(hd_obj = hd_obj5,method = "power",ncomp = 3,smooth_tuning = .25,centerfns = T,alpha_orth = F,smoothing_type = "basispen")
result$pc_fd
result$pc_nfd |> dim()
pc_nfd_len
pc_nfd_len
hd_obj$nf$features
cumulative_indices
seq_along(pc_nfd_len)
pc_nfd |> dim()
cumulative_indices[1]
cumulative_indices[2]
pc_nfd |> dim()
pcnfd[[1]] |> dim()
devtools::load_all(".")
result_soroush <- Mhpca(hd_obj = hd_obj5,method = "power",ncomp = 3,smooth_tuning = .25,centerfns = T,alpha_orth = F,smoothing_type = "basispen")
result_soroush <- Mhpca(hd_obj = hd_obj5,method = "power",ncomp = 3,smooth_tuning = .25,centerfns = T,alpha_orth = F,smoothing_type = "basispen")
result_soroush <- Mhpca(hd_obj = hd_obj5,method = "power",ncomp = 3,smooth_tuning = .25,centerfns = T,alpha_orth = F,smoothing_type = "basispen")
result_soroush$pc_hd
result_soroush$pc_hd |> plot()
result_soroush$pc_hd$mf |> plot()
result_soroush$pc_hd$mf[,1] |> plot()
result_soroush$pc_hd$mf[1,1] |> plot()
result_soroush$pc_hd$mf[2,1] |> plot()
result_soroush$pc_hd$mf[3,1] |> plot()
devtools::load_all(".")
result_yue <- Mhpca(hd_obj = mfd_v1,method = "power",ncomp = 3,smooth_tuning = .25,centerfns = T,alpha_orth = F,smoothing_type = "basispen")
devtools::load_all(".")
result_yue <- Mhpca(hd_obj = mfd_v1,method = "power",ncomp = 3,smooth_tuning = .25,centerfns = T,alpha_orth = F,smoothing_type = "basispen")
hd_obj
method
ncomp
smooth_tuning
sparse_tuning
centerfns
alpha_orth
sparse_type
K_fold
sparse_CV
smooth_GCV
result_yue <- Mhpca(hd_obj = mfd_v1,method = "power",ncomp = 3,smooth_tuning = .25,centerfns = T,alpha_orth = F,smoothing_type = "basispen")
result_yue <- Mhpca(hd_obj = mfd_v1,method = "power",ncomp = 3,smooth_tuning = .25,centerfns = T,alpha_orth = F,smoothing_type = "basispen")
mvmfd_obj
devtools::load_all(".")
result_yue <- Mhpca(hd_obj = mfd_v1,method = "power",ncomp = 3,smooth_tuning = .25,centerfns = T,alpha_orth = F,smoothing_type = "basispen")
mvmfd_obj
result_yue <- Mhpca(hd_obj = mfd_v1,method = "power",ncomp = 3,smooth_tuning = .25,centerfns = T,alpha_orth = F,smoothing_type = "basispen")
result_yue <- Mhpca(hd_obj = mfd_v1,method = "power",ncomp = 3,smooth_tuning = .25,centerfns = T,alpha_orth = F,smoothing_type = "basispen")
K_fold
K_fold
k_fold <- 5
k_fold
exists(k_fold)
print(k_fold)
force(k_fold)
K_fold
devtools::load_all(".")
result_yue <- Mhpca(hd_obj = mfd_v1,method = "power",ncomp = 3,smooth_tuning = .25,centerfns = T,alpha_orth = F,smoothing_type = "basispen")
devtools::load_all(".")
result_yue <- Mhpca(hd_obj = mfd_v1,method = "power",ncomp = 3,smooth_tuning = .25,centerfns = T,alpha_orth = F,smoothing_type = "basispen")
result
result$mean_mfd
devtools::load_all(".")
result_yue <- Mhpca(hd_obj = mfd_v1,method = "power",ncomp = 3,smooth_tuning = .25,centerfns = T,alpha_orth = F,smoothing_type = "basispen")
result_yue
result_yue |> plot()
result_yue$pc_hd
result_yue <- Mhpca(hd_obj = mfd_v1,method = "power",ncomp = 3,smooth_tuning = .25,centerfns = T,alpha_orth = F,smoothing_type = "basispen")
library(spls)
data("yeast")
# ChIP-chip data
x <- yeast$x
# gene expression functional 542 genes and and each column is mrna level measure at each 7 minutes
y <- yeast$y
rm(yeast)
# Create B-spline basis and multivariate functional data (mfd) objects
v1 <- t(y)
scaling_factor_tfunction <- sqrt(mean(diag(var(v1))))
v1 <- 1/sqrt(mean(diag(var(v1))))*v1
nbasis_f <- 10
t0_f <- 0
t1_f <- 119
grid_point <- ncol(y)
t <- seq(t0_f, t1_f, length.out = grid_point)
bspline_basis <- fda::create.bspline.basis(c(t0_f,t1_f),nbasis_f)
mfd_basis <- basismfd$new(bspline_basis)
mfd_v1 <- mfd$new(t,v1,mfd_basis)
mfd_v2 <- mfd$new(t,v1,mfd_basis)
mvmfd_v12 <- Mvmfd(mfd_v1,mfd_v2)
hd_obj1 <- Hd(list(mfd_v1,mfd_v1))
#vector data
vector_data <- x
scaling_factor_vector <- sqrt(mean(diag(var(vector_data))))
vector_data <- 1/scaling_factor_vector*vector_data
nfd_obj1 <- nfd(vector_data)
nfd_obj2 <- nfd(vector_data)
mvnfd_obj <- Mvnfd(nfd_obj1,nfd_obj2)
hd_obj2 <- Hd(list(mfd_v1,mfd_v1,nfd_obj1))
hd_obj3 <- Hd(mfd_v1,nfd_obj1)
hd_obj4 <- Hd(nfd_obj1)
hd_obj5 <- Hd(mfd_v1,mfd_v1,nfd_obj1,nfd_obj1)
#model
alpha1 <- list(a1 = 2^seq(-10, 3, length.out = 10))
alpha2 <- list(a1 = 2^seq(-10, 3, length.out = 10),a2 = 2^seq(-10, 3, length.out = 10))
result_soroush <- hybrid_pca(hd_obj = hd_obj5,method = "power",ncomp = 3,smooth_tuning = .25,centerfns = T,alpha_orth = F,smoothing_type = "basispen")
result_soroush_eigen <- hybrid_pca(hd_obj = hd_obj5,method = "eigen",ncomp = 3,smooth_tuning = alpha2,centerfns = T,smoothing_type = "basispen")
result_soroush_orth <- hybrid_pca(hd_obj = hd_obj5,method = "power",ncomp = 3,smooth_tuning = alpha2,centerfns = T,alpha_orth = T,smoothing_type = "basispen")
result_yue <- hybrid_pca(hd_obj = mfd_v1,method = "power",ncomp = 3,smooth_tuning = .25,centerfns = T,alpha_orth = F,smoothing_type = "basispen")
result_yue_pen <- hybrid_pca(hd_obj = mfd_v1,
method = "power",
ncomp = 3,
smooth_tuning = .25,
centerfns = T,
alpha_orth = F,
smoothing_type = "basispen",
sparse_type = "soft-threshold",
sparse_tuning = c(.1,.2,.3),
K_fold = 10,
sparse_CV = TRUE)
sparse_tuning = as.integer(seq(0, 20, length.out = 20))
result_yue_pen <- Remfpca(mvmfd_obj = mfd_v1,method = "power",ncomp = 3,sparse_tuning = c(1,2,3,4),sparse_CV = T,K_fold = 10)
result_yue_pen <- Remfpca(mvmfd_obj = mfd_v1,method = "power",ncomp = 3,sparse_tuning = c(1.5,2,3,4),sparse_CV = T,K_fold = 10)
result_yue_pen <- Remfpca(mvmfd_obj = mfd_v1,method = "power",ncomp = 3,sparse_tuning = c(1.5,2.5,3.5,4.5),sparse_CV = T,K_fold = 10)
result_yue_pen <- Remfpca(mvmfd_obj = mfd_v1,method = "power",ncomp = 3,sparse_tuning = c(.5,.6,.7,.8),sparse_CV = T,K_fold = 10)
result_yue_pen <- Remfpca(mvmfd_obj = mfd_v1,method = "power",ncomp = 3,sparse_tuning = c(.5,.6,.7,1.8),sparse_CV = T,K_fold = 10)
result_yue_pen <- Remfpca(mvmfd_obj = mfd_v1,method = "power",ncomp = 3,sparse_tuning = c(.5,.6,1.7,1.8),sparse_CV = T,K_fold = 10)
result_yue_pen <- Remfpca(mvmfd_obj = mfd_v1,method = "power",ncomp = 3,sparse_tuning = c(.5,1.6,1.7,1.8),sparse_CV = T,K_fold = 10)
result_yue_pen <- Remfpca(mvmfd_obj = mfd_v1,method = "power",ncomp = 3,sparse_tuning = c(1.5,1.6,1.7,1.8),sparse_CV = T,K_fold = 10)
result_yue_pen <- Remfpca(mvmfd_obj = mfd_v1,method = "power",ncomp = 3,sparse_tuning = c(1.5,.6,1.7,1.8),sparse_CV = T,K_fold = 10)
devtools::load_all(".")
result_yue_pen <- Remfpca(mvmfd_obj = mfd_v1,method = "power",ncomp = 3,sparse_tuning = c(1.5,.6,1.7,1.8),sparse_CV = T,K_fold = 10)
result_yue_pen <- Remfpca(mvmfd_obj = mfd_v1,method = "power",ncomp = 3,sparse_tuning = c(1.5,.6,1.7,1.8),sparse_CV = T,K_fold = 10)
sparse_CV
data |> dim()
data
u_new |> dim()
data |> dim()
t(data)%*%u_new
data |> dim()
t(data)%*%u_new
sparse_tuning
sparse_tuning_single
sparse_tuning_single
sparse_tuning_result
sparse_tuning_type
u_new
result_soroush_pen <- hybrid_pca(hd_obj = hd_obj5,
method = "power",
ncomp = 3,
smooth_tuning = .25,
centerfns = T,
alpha_orth = F,
smoothing_type = "basispen",
sparse_tuning = 1:10,
K_fold = 10,
sparse_CV = TRUE,penalize_u = T)
result_soroush_pen <- hybrid_pca(hd_obj = hd_obj3,
method = "power",
ncomp = 3,
smooth_tuning = .25,
centerfns = T,
alpha_orth = F,
smoothing_type = "basispen",
sparse_tuning = 1:10,
K_fold = 10,
sparse_CV = TRUE,penalize_u = T)
result_soroush_pen <- hybrid_pca(hd_obj = hd_obj3,
method = "power",
ncomp = 3,
smooth_tuning = .25,
centerfns = T,
alpha_orth = F,
smoothing_type = "basispen",
sparse_tuning = 1:10,
K_fold = 10,
sparse_CV = TRUE,penalize_u = T)
result_soroush_pen$CVs
result_soroush_pen$sparse_tuning
result_soroush_pen$pc_hd |> plot()
result_soroush_pen |> plot()
result_soroush_pen <- hybrid_pca(hd_obj = hd_obj5,
method = "power",
ncomp = 3,
smooth_tuning = .25,
centerfns = T,
alpha_orth = F,
smoothing_type = "basispen",
sparse_tuning = 1:10,
K_fold = 10,
sparse_CV = TRUE,
penalize_u = T)
result_soroush_pen <- hybrid_pca(hd_obj = hd_obj5,
method = "power",
ncomp = 3,
smooth_tuning = .25,
centerfns = T,
alpha_orth = F,
smoothing_type = "basispen",
sparse_tuning = 10:30,
K_fold = 10,
sparse_CV = TRUE,
penalize_u = T)
devtools::load_all(".")
result_soroush_pen <- hybrid_pca(hd_obj = hd_obj5,
method = "power",
ncomp = 3,
smooth_tuning = .25,
centerfns = T,
alpha_orth = F,
smoothing_type = "basispen",
sparse_tuning = 10:30,
K_fold = 10,
sparse_CV = TRUE,
penalize_u = T)
u_test
u_test |> dim()
result_soroush_pen <- hybrid_pca(hd_obj = hd_obj5,
method = "power",
ncomp = 3,
smooth_tuning = .25,
centerfns = T,
alpha_orth = F,
smoothing_type = "basispen",
sparse_tuning = 10:30,
K_fold = 10,
sparse_CV = TRUE,
penalize_u = T)
result_soroush_pen <- hybrid_pca(hd_obj = hd_obj5,
method = "power",
ncomp = 3,
smooth_tuning = .25,
centerfns = T,
alpha_orth = F,
smoothing_type = "basispen",
sparse_tuning = 10:30,
K_fold = 10,
sparse_CV = TRUE,
penalize_u = T)
u_test |> dim()
nfdata_test |> dim()
fdata_test |> dim()
devtools::load_all(".")
result_soroush_pen <- hybrid_pca(hd_obj = hd_obj5,
method = "power",
ncomp = 3,
smooth_tuning = .25,
centerfns = T,
alpha_orth = F,
smoothing_type = "basispen",
sparse_tuning = 10:30,
K_fold = 10,
sparse_CV = TRUE,
penalize_u = T)
devtools::load_all(".")
result_soroush_pen <- hybrid_pca(hd_obj = hd_obj5,
method = "power",
ncomp = 3,
smooth_tuning = .25,
centerfns = T,
alpha_orth = F,
smoothing_type = "basispen",
sparse_tuning = 10:30,
K_fold = 10,
sparse_CV = TRUE,
penalize_u = T)
fv_test |> dim()
nfv_test |> dim()
nfv_test
fv_test
error_score_sparse
devtools::load_all(".")
result_soroush_pen <- hybrid_pca(hd_obj = hd_obj5,
method = "power",
ncomp = 3,
smooth_tuning = .25,
centerfns = T,
alpha_orth = F,
smoothing_type = "basispen",
sparse_tuning = 10:30,
K_fold = 10,
sparse_CV = TRUE,
penalize_u = T)
result_soroush_pen |> plot()
result_soroush_pen$pc_hd |> plot()
result_soroush_pen$lsv
inprod_hd(hd_obj5,result_soroush_pen$pc_hd)
k <- inprod_hd(hd_obj5,result_soroush_pen$pc_hd)
k |> dim()
k[,1] |> plot()
k[,2] |> plot()
k[,3] |> plot()
result_soroush_pen <- hybrid_pca(hd_obj = hd_obj3,
method = "power",
ncomp = 3,
smooth_tuning = .25,
centerfns = T,
alpha_orth = F,
smoothing_type = "basispen",
sparse_tuning = 10:30,
K_fold = 10,
sparse_CV = TRUE,
penalize_u = T)
result_soroush_pen <- hybrid_pca(hd_obj = hd_obj5,
method = "power",
ncomp = 3,
smooth_tuning = .25,
centerfns = T,
alpha_orth = F,
smoothing_type = "basispen",
sparse_tuning = 1:10,
K_fold = 10,
sparse_CV = TRUE,
penalize_u = T)
result_soroush_pen$CVs
result_soroush_pen$CVs[[1]] |> plot()
result_soroush_pen$CVs[[1]] |> tsplot()
result_soroush_pen$CVs[[1]] |> ts.plot()
result_soroush_pen <- hybrid_pca(hd_obj = hd_obj3,
method = "power",
ncomp = 3,
smooth_tuning = .25,
centerfns = T,
alpha_orth = F,
smoothing_type = "basispen",
sparse_tuning = 1:30,
K_fold = 10,
sparse_CV = TRUE,
penalize_u = T)
result_soroush_pen$CVs
hd_obj1$nf
result_soroush <- hybrid_pca(hd_obj = hd_obj1,method = "power",ncomp = 3,smooth_tuning = .25,centerfns = T,alpha_orth = F,smoothing_type = "basispen")
t(NULL)
k1 <- NULL
k2 <- k1
k2
null+4
NULL + 4
4*NULL
NA
NA + 4
A <- matrix(rnorm(100),nr=10)
B <- matrix(0,nr=10,nc = 10)
all.equal(prcomp(A),cbind(A,B))
k1 <- prcomp(A)
k2 <- prcomp(cbind(A,B))
k1$sdev |> length()
k1$sdev
k2$sdev
k1$rotation |> dim()
k2$rotation |> dim()
k1$rotation
k2$rotation
svd(0)
svd(0)$v
svd(0)$v[,1]
diag(1,4)
diag(1,4) |> svd()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
0 + matrix(1:10,nr=2)
rbind(NULL,matrix(1:10,nr=2))
0 + c(1,2,3)
NULL/5
qr.Q(qr(matrix(1:10,nr=2)))
k1 <- qr.Q(qr(matrix(1:10,nr=2)))
apply(k1,2,"norm","2")
4*NULL
ncol(NULL)
devtools::install()
